=== ./index.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title data-i18n="site-title">Климат Контроль</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css/base.css">
    <link rel="stylesheet" href="css/hero.css">
    <link rel="stylesheet" href="css/header.css">
    <link rel="stylesheet" href="css/cart.css">
    <link rel="stylesheet" href="css/products.css">
    <link rel="stylesheet" href="css/services.css">
    <link rel="stylesheet" href="css/contacts.css">
    <link rel="stylesheet" href="css/footer.css">
    <link rel="icon" href="/icons/icon-192x192.png">
</head>
<body>
    <div id="header-container"></div>
    <main>
        <div id="hero-container"></div>
        <div id="services-container"></div>
        <div id="products-container"></div>
        <div id="contacts-container"></div>
    </main>
    <div id="footer-container"></div>
    <div id="cart-modal-container"></div>

    <script type="module" src="js/main.js"></script>
</body>
</html>
=== ./css/services.css ===
.services {
    padding: 4rem 0;
}

.services__title {
    font-size: 2rem;
    font-weight: var(--font-bold);
    text-align: center;
    margin-bottom: 2rem;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.services__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
}

.service-card {
    background: var(--primary-color);
    backdrop-filter: blur(12px);
    border-radius: 12px;
    padding: 1.5rem;
    text-align: center;
    transition: var(--transition);
    box-shadow: var(--shadow);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.light-theme .service-card {
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.service-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--glow-shadow);
}

.service-card__title {
    font-size: 1.3rem;
    font-weight: var(--font-bold);
    margin-bottom: 0.5rem;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.service-card__description {
    font-size: 0.9rem;
    color: var(--text-color);
    margin-bottom: 1rem;
    text-shadow: var(--text-shadow);
}

.service-card__button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    padding: 0.75rem 1rem;
    border-radius: 12px;
    cursor: pointer;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.service-card__button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

@media (max-width: 768px) {
    .services__title {
        font-size: 1.6rem;
    }
}
=== ./css/hero.css ===
.hero {
    padding: 4rem 0;
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    text-align: center;
}

.hero__container {
    max-width: var(--container-width);
    margin: 0 auto;
    padding: 0 1.5rem;
}

.hero__title {
    font-size: 2.5rem;
    font-weight: var(--font-bold);
    color: var(--text-color);
    text-shadow: var(--text-shadow);
    margin-bottom: 1rem;
}

.hero__subtitle {
    font-size: 1.2rem;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
    margin-bottom: 1.5rem;
}

.hero__cta {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 12px;
    text-decoration: none;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.hero__cta:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

@media (max-width: 768px) {
    .hero__title {
        font-size: 1.8rem;
    }

    .hero__subtitle {
        font-size: 1rem;
    }
}
=== ./css/cart.css ===
.cart-button-container {
    position: relative;
}

.cart-button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    display: flex;
    align-items: center;
    cursor: pointer;
    font-size: 1rem;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.cart-button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-3px);
    box-shadow: var(--glow-shadow);
}

.cart-icon-wrapper {
    position: relative;
    margin-right: 0.5rem;
}

.cart-icon {
    font-size: 1.5rem;
    transition: var(--transition);
}

.cart-count {
    position: absolute;
    top: -0.4rem;
    right: -0.4rem;
    background-color: var(--cart-red);
    color: var(--text-color);
    border-radius: 50%;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: var(--font-bold);
    min-width: 1rem;
    text-align: center;
    transition: var(--transition);
}

.cart-button:hover .cart-count {
    transform: scale(1.15);
    box-shadow: var(--glow-shadow);
}

.cart-text {
    display: flex;
    flex-direction: column;
    margin-right: 0.5rem;
}

.cart-text__items {
    font-weight: var(--font-thin);
    font-size: 0.85rem;
}

.cart-text__total {
    font-weight: var(--font-bold);
    font-size: 0.95rem;
}

.cart-dropdown-toggle {
    font-size: 1rem;
    margin-left: 0.5rem;
    transition: var(--transition);
}

.cart-dropdown-toggle:hover {
    transform: rotate(180deg);
    color: var(--secondary-color);
}

.cart-dropdown {
    display: none;
    position: absolute;
    top: 100%;
    right: 0;
    background: var(--primary-color);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    box-shadow: var(--shadow);
    width: 350px;
    max-height: 400px;
    overflow-y: auto;
    padding: 1rem;
    z-index: 101;
    opacity: 0;
    transform: translateY(-10px);
    transition: var(--transition);
}

.light-theme .cart-dropdown {
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.cart-dropdown--open {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

.cart-dropdown__items {
    list-style: none;
    margin-bottom: 1rem;
}

.cart-dropdown__items li {
    display: flex;
    align-items: center;
    padding: 0.75rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    transition: var(--transition);
}

.light-theme .cart-dropdown__items li {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.cart-dropdown__items li:hover {
    background: rgba(255, 255, 255, 0.1);
    box-shadow: var(--glow-shadow);
}

.light-theme .cart-dropdown__items li:hover {
    background: rgba(0, 0, 0, 0.05);
}

.cart-dropdown__items img {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 4px;
    margin-right: 0.75rem;
}

.cart-dropdown__item-info {
    flex: 1;
    color: var(--text-color);
    text-shadow: var(--text-shadow);
}

.cart-dropdown__item-name {
    font-size: 0.9rem;
    font-weight: var(--font-bold);
}

.cart-dropdown__item-price {
    font-size: 0.8rem;
    color: var(--nav-text-color);
    margin-top: 0.25rem;
}

.cart-dropdown__item-remove {
    background: none;
    border: none;
    color: var(--cart-red);
    cursor: pointer;
    font-size: 1rem;
    padding: 0.25rem;
    transition: var(--transition);
}

.cart-dropdown__item-remove:hover {
    color: var(--secondary-color);
    transform: scale(1.2);
}

.cart-dropdown__summary {
    text-align: right;
    font-weight: var(--font-bold);
    margin-bottom: 1rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding-top: 0.5rem;
    color: var(--text-color);
    text-shadow: var(--text-shadow);
}

.light-theme .cart-dropdown__summary {
    border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.cart-dropdown__actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.cart-dropdown__button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    border-radius: 12px;
    padding: 0.75rem;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.cart-dropdown__button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

.cart-modal {
    border: none;
    border-radius: 12px;
    padding: 2rem;
    max-width: 500px;
    width: 90%;
    background: var(--primary-color);
    backdrop-filter: blur(12px);
    box-shadow: var(--shadow);
    border: 1px solid rgba(255, 255, 255, 0.1);
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.95);
    opacity: 0;
    transition: var(--transition);
}

.light-theme .cart-modal {
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.cart-modal[open] {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
}

.cart-modal::backdrop {
    background: var(--modal-bg);
    opacity: 0;
    transition: var(--transition);
}

.cart-modal[open]::backdrop {
    opacity: 1;
}

.cart-modal__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    color: var(--text-color);
    text-shadow: var(--text-shadow);
}

.cart-modal__close {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-color);
    transition: var(--transition);
}

.cart-modal__close:hover {
    color: var(--cart-red);
    transform: scale(1.2);
}

.cart-items {
    list-style: none;
    margin-bottom: 1rem;
}

.cart-items li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    text-shadow: var(--text-shadow);
    transition: var(--transition);
}

.light-theme .cart-items li {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.cart-items li:hover {
    background: rgba(255, 255, 255, 0.1);
    box-shadow: var(--glow-shadow);
}

.light-theme .cart-items li:hover {
    background: rgba(0, 0, 0, 0.05);
}

.cart-items li button {
    background: none;
    border: none;
    color: var(--cart-red);
    cursor: pointer;
    font-size: 1rem;
    transition: var(--transition);
}

.cart-items li button:hover {
    color: var(--secondary-color);
    transform: scale(1.1);
}

.cart-summary {
    text-align: right;
    font-weight: var(--font-bold);
    color: var(--text-color);
    text-shadow: var(--text-shadow);
}

.cart-modal__footer {
    display: flex;
    justify-content: space-between;
    margin-top: 1rem;
}

.cart-button--clear,
.cart-button--checkout {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    border-radius: 12px;
    padding: 0.75rem 1rem;
    cursor: pointer;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.cart-button--clear:hover,
.cart-button--checkout:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

@media (max-width: 768px) {
    .cart-button {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }

    .cart-icon {
        font-size: 1.2rem;
    }

    .cart-count {
        font-size: 0.6rem;
        padding: 0.1rem 0.3rem;
    }

    .cart-text__items {
        font-size: 0.7rem;
    }

    .cart-text__total {
        font-size: 0.8rem;
    }

    .cart-dropdown-toggle {
        font-size: 0.8rem;
        margin-left: 0.3rem;
    }

    .cart-dropdown {
        width: 280px;
        max-height: 300px;
    }

    .cart-modal {
        padding: 1rem;
    }
}
=== ./css/products.css ===
.products {
    padding: 4rem 0;
}

.products__title {
    font-size: 2rem;
    font-weight: var(--font-bold);
    text-align: center;
    margin-bottom: 2rem;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.products__filters {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 2rem;
    justify-content: center;
}

.filter-group {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.filter-group label {
    font-size: 1rem;
    font-weight: var(--font-bold);
    color: var(--text-color);
    text-shadow: var(--text-shadow);
}

.filter-group select {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    border-radius: 12px;
    padding: 0.75rem;
    font-size: 0.9rem;
    cursor: pointer;
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.filter-group select:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    box-shadow: var(--glow-shadow);
}

.filter-group select:focus {
    outline: none;
    box-shadow: 0 0 5px var(--glow-shadow);
}

.products__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
}

.product-card {
    background: var(--primary-color);
    backdrop-filter: blur(12px);
    border-radius: 12px;
    padding: 1.5rem;
    text-align: center;
    transition: var(--transition);
    box-shadow: var(--shadow);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.light-theme .product-card {
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--glow-shadow);
}

.product-card__image {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    transition: var(--transition);
}

.product-card:hover .product-card__image {
    transform: scale(1.03);
    box-shadow: var(--glow-shadow);
}

.product-card__title {
    font-size: 1.3rem;
    font-weight: var(--font-bold);
    margin: 0.5rem 0;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.product-card__description {
    font-size: 0.9rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
    text-shadow: var(--text-shadow);
}

.product-card__price {
    font-weight: var(--font-bold);
    color: var(--accent-color);
    margin-bottom: 1rem;
    text-shadow: var(--text-shadow);
}

.product-card__button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    padding: 0.75rem 1rem;
    border-radius: 12px;
    cursor: pointer;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.product-card__button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

@media (max-width: 768px) {
    .products__title {
        font-size: 1.6rem;
    }

    .products__filters {
        flex-direction: column;
        gap: 1rem;
    }

    .filter-group select {
        width: 100%;
    }
}
=== ./css/contacts.css ===
.contacts {
    padding: 4rem 0;
}

.contacts__title {
    font-size: 2rem;
    font-weight: var(--font-bold);
    text-align: center;
    margin-bottom: 2rem;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.contacts__content {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
}

.contacts__info {
    flex: 1;
    min-width: 250px;
}

.contacts__info p {
    font-size: 1rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
    text-shadow: var(--text-shadow);
}

.contacts__form {
    flex: 1;
    min-width: 250px;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.contacts__form input,
.contacts__form textarea {
    background: var(--button-bg);
    color: var(--text-color);
    padding: 0.75rem;
    border: none;
    border-radius: 12px;
    font-size: 1rem;
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.contacts__form input:focus,
.contacts__form textarea:focus {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    box-shadow: 0 0 5px var(--glow-shadow);
}

.contacts__form input::placeholder,
.contacts__form textarea::placeholder {
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.contacts__form textarea {
    resize: vertical;
    min-height: 100px;
}

.contacts__form button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    padding: 0.75rem;
    border-radius: 12px;
    cursor: pointer;
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    transition: var(--transition);
}

.contacts__form button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

@media (max-width: 768px) {
    .contacts__title {
        font-size: 1.6rem;
    }

    .contacts__content {
        flex-direction: column;
    }
}
=== ./css/header.css ===
.header {
    background: var(--primary-color);
    backdrop-filter: blur(10px);
    padding: 1.5rem 0;
    position: sticky;
    top: 0;
    z-index: 100;
    transition: var(--transition);
    box-shadow: var(--shadow);
}

.header__container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: nowrap;
}

.header__title {
    font-size: 2rem;
    font-weight: var(--font-bold);
    letter-spacing: 1px;
    text-shadow: var(--text-shadow);
    color: var(--nav-text-color);
    transition: var(--transition);
}

.header__title:hover {
    color: var(--accent-color);
    transform: scale(1.02);
    text-shadow: var(--glow-shadow);
}

.header__nav {
    display: flex;
    overflow: visible;
}

.header__nav-list {
    list-style: none;
    display: flex;
    gap: 2rem;
    flex-wrap: nowrap;
}

.header__nav-item {
    position: relative;
}

.header__nav-link {
    color: var(--nav-text-color);
    text-decoration: none;
    font-size: 1.1rem;
    font-weight: var(--font-thin);
    text-shadow: var(--text-shadow);
    transition: var(--transition);
    padding: 0.5rem 1rem;
    border-radius: 8px;
    position: relative;
    z-index: 1;
}

.header__nav-link:hover {
    color: var(--secondary-color);
    background: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
    box-shadow: var(--glow-shadow);
}

.light-theme .header__nav-link:hover {
    background: rgba(0, 0, 0, 0.05);
}

.header__nav-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    background: var(--secondary-color);
    bottom: 0;
    left: 0;
    transition: var(--transition);
    z-index: -1;
}

.header__nav-link:hover::after {
    width: 100%;
}

.header__controls {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-left: auto;
}

.language-switcher,
.theme-toggle,
.profile-button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    border-radius: 12px;
    padding: 0.75rem;
    font-size: 1rem;
    font-family: var(--font-family);
    font-weight: var(--font-bold);
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
    cursor: pointer;
    transition: var(--transition);
    min-width: 50px;
    text-align: center;
}

.profile-button::before {
    content: '👤'; /* Иконка пользователя, можно изменить */
    margin-right: 0.5rem;
}

.theme-toggle::before {
    content: '🌙';
}

.light-theme .theme-toggle::before {
    content: '☀️';
}

.language-switcher:hover,
.theme-toggle:hover,
.profile-button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-3px);
    box-shadow: var(--glow-shadow);
}

.language-switcher:focus,
.theme-toggle:focus,
.profile-button:focus {
    outline: none;
    box-shadow: 0 0 5px var(--glow-shadow);
}

.header__toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    transition: var(--transition);
}

.header__toggle-icon {
    display: block;
    width: 24px;
    height: 2px;
    background: var(--text-color);
    position: relative;
    transition: var(--transition);
}

.header__toggle-icon::before,
.header__toggle-icon::after {
    content: '';
    position: absolute;
    width: 24px;
    height: 2px;
    background: var(--text-color);
    left: 0;
    transition: var(--transition);
}

.header__toggle-icon::before {
    top: -8px;
}

.header__toggle-icon::after {
    bottom: -8px;
}

.header__toggle--open .header__toggle-icon {
    background: transparent;
}

.header__toggle--open .header__toggle-icon::before {
    transform: rotate(45deg) translate(5px, 5px);
}

.header__toggle--open .header__toggle-icon::after {
    transform: rotate(-45deg) translate(5px, -5px);
}

/* Стили модалки для профиля (добавлено) */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--modal-bg);
    backdrop-filter: blur(5px);
    z-index: 200;
    align-items: center;
    justify-content: center;
    transition: var(--transition);
}

.modal__content {
    background: var(--primary-color);
    border-radius: 12px;
    padding: 2rem;
    max-width: 400px;
    width: 90%;
    box-shadow: var(--shadow);
    position: relative;
    text-align: center;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.light-theme .modal__content {
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.modal__close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-color);
    transition: var(--transition);
}

.modal__close:hover {
    color: var(--secondary-color);
}

.modal__field {
    margin: 1rem 0;
}

.modal__field label {
    display: block;
    font-size: 1rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
    text-shadow: var(--text-shadow);
}

.modal__field input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--button-bg);
    border-radius: 8px;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    backdrop-filter: blur(8px);
}

.modal__button {
    background: var(--button-bg);
    color: var(--text-color);
    border: none;
    border-radius: 12px;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-family: var(--font-family);
    font-weight: var(--font-bold);
    cursor: pointer;
    transition: var(--transition);
    margin-top: 1rem;
    text-shadow: var(--text-shadow);
    backdrop-filter: blur(8px);
}

.modal__button:hover {
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    transform: translateY(-3px);
    box-shadow: var(--glow-shadow);
}

.modal__button--logout {
    background: var(--cart-red);
}

.modal__button--logout:hover {
    background: #da190b;
}

@media (max-width: 768px) {
    .header__nav {
        display: none;
    }

    .header__nav--open {
        display: block;
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: var(--primary-color);
        backdrop-filter: blur(12px);
        padding: 1.5rem;
        opacity: 0;
        transform: translateY(-10px);
        transition: var(--transition);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .light-theme .header__nav--open {
        border: 1px solid rgba(0, 0, 0, 0.1);
    }

    .header__nav--open {
        opacity: 1;
        transform: translateY(0);
    }

    .header__nav-list {
        flex-direction: column;
        gap: 1.5rem;
    }

    .header__nav-link {
        font-size: 1.2rem;
        padding: 0.75rem;
    }

    .header__toggle {
        display: block;
    }

    .header__title {
        font-size: 1.6rem;
    }

    .header__controls {
        flex-direction: column;
        gap: 0.5rem;
    }

    .language-switcher,
    .theme-toggle,
    .profile-button {
        width: 100%;
        padding: 0.5rem;
        min-width: 40px;
        font-size: 0.9rem;
    }

    .modal__content {
        padding: 1.5rem;
        width: 95%;
    }

    .modal__field input {
        padding: 0.5rem;
        font-size: 0.9rem;
    }

    .modal__button {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }
}
=== ./css/base.css ===
/* Переменные для тёмной темы */
:root {
    --primary-color: rgba(20, 30, 60, 0.4); /* Стекломорфизм */
    --accent-color: #00ddeb; /* Неоновый голубой */
    --secondary-color: #ff4fa1; /* Неоновый розовый */
    --text-color: #f0f0f5; /* Мягкий белый */
    --nav-text-color: #d0e6ff; /* Голубовато-серый */
    --text-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
    --font-family: 'Poppins', Arial, sans-serif;
    --container-width: 1400px;
    --cart-red: #ff4fa1; /* Неоновый розовый */
    --modal-bg: rgba(0, 0, 20, 0.6);
    --button-bg: rgba(255, 255, 255, 0.2);
    --font-thin: 300;
    --font-bold: 600;
    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    --glow-shadow: 0 0 10px rgba(0, 221, 235, 0.5);
    --background-color: #0a0a23; /* Современный тёмный фон */
}

/* Переменные для светлой темы */
.light-theme {
    --primary-color: rgba(240, 245, 255, 0.4); /* Светлый стекломорфизм */
    --accent-color: #66ccff; /* Пастельный голубой */
    --secondary-color: #ff9f80; /* Персиковый */
    --text-color: #333333; /* Тёмный текст */
    --nav-text-color: #1a3c66; /* Тёмный голубой */
    --text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    --cart-red: #ff9f80; /* Персиковый */
    --modal-bg: rgba(255, 255, 255, 0.6);
    --button-bg: rgba(255, 255, 255, 0.2);
    --background-color: #f0f4ff; /* Светлый пастельный фон */
    --shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    --glow-shadow: 0 0 10px rgba(102, 204, 255, 0.5);
}

/* Сброс базовых стилей */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: var(--font-family);
    line-height: 1.6;
    background: var(--background-color);
}

.container {
    max-width: var(--container-width);
    margin: 0 auto;
    padding: 0 1.5rem;
}
=== ./css/footer.css ===
.footer {
    padding: 2rem 0;
}

.footer__container {
    max-width: var(--container-width);
    margin: 0 auto;
    padding: 0 1.5rem;
}

.footer__info h3 {
    font-size: 1.2rem;
    font-weight: var(--font-bold);
    margin-bottom: 0.5rem;
    color: var(--nav-text-color);
    text-shadow: var(--text-shadow);
}

.footer__info p {
    font-size: 0.9rem;
    margin-bottom: 0.3rem;
    text-shadow: var(--text-shadow);
}

.footer__copyright {
    margin-top: 1rem;
    text-align: center;
}

.footer__copyright p {
    font-size: 0.9rem;
    text-shadow: var(--text-shadow);
}
=== ./js/products.js ===
export const products = [
    {
        id: 1,
        name: { ru: "Кондиционер EcoCool", uk: "Кондиціонер EcoCool" },
        description: { ru: "Энергоэффективный кондиционер", uk: "Енергоефективний кондиціонер" },
        price: 15000,
        category: "ac",
        image: "https://picsum.photos/150"  // Placehold.co — стабильный replacement
    },
    {
        id: 2,
        name: { ru: "Рекуператор FreshAir", uk: "Рекуператор FreshAir" },
        description: { ru: "Система вентиляции для дома", uk: "Система вентиляції для дому" },
        price: 25000,
        category: "recuperator",
        image: "https://picsum.photos/150"  // Placehold.co
    }
];

export function renderProducts(lang, translations, filteredProducts = products) {
    console.log('Rendering products for language:', lang);
    const productsGrid = document.querySelector('.products__grid');
    if (!productsGrid) return;
    productsGrid.innerHTML = '';
    filteredProducts.forEach(product => {
        const productCard = document.createElement('div');
        productCard.classList.add('product-card');
        productCard.innerHTML = `
            <img src="${product.image}" alt="${product.name[lang]}" class="product-card__image" onerror="this.src='https://placehold.co/150x150/blue/white?text=Image+Not+Found'">
            <h3 class="product-card__title">${product.name[lang]}</h3>
            <p class="product-card__description">${product.description[lang]}</p>
            <p class="product-card__price">$${product.price.toFixed(2)}</p>
            <button class="product-card__button" data-id="${product.id}" data-i18n="service-order">${translations[lang]['service-order']}</button>
        `;
        productsGrid.appendChild(productCard);
    });
}

export function filterProducts(lang, translations) {
    const category = document.getElementById('category')?.value || 'all';
    const price = document.getElementById('price')?.value || 'all';
    let filteredProducts = [...products];

    if (category !== 'all') {
        filteredProducts = filteredProducts.filter(product => product.category === category);
    }

    if (price !== 'all') {
        filteredProducts.sort((a, b) => price === 'low' ? a.price - b.price : b.price - a.price);
    }

    renderProducts(lang, translations, filteredProducts);
}
=== ./js/cart.js ===
export let cart = JSON.parse(localStorage.getItem('cart')) || [];

export function saveCart() {
    localStorage.setItem('cart', JSON.stringify(cart));
    console.log('Cart saved:', cart);
}

export function updateCartUI(translations, lang) {
    const cartCount = document.querySelector('.cart-count');
    const cartItemsText = document.querySelector('.cart-text__items');
    const cartTotalText = document.querySelector('.cart-text__total');
    const cartDropdownItems = document.querySelector('.cart-dropdown__items');
    const cartDropdownSummary = document.querySelector('.cart-dropdown__summary');
    const cartModalItems = document.querySelector('.cart-items');
    const cartSummary = document.querySelector('.cart-summary');

    if (!cartCount || !cartItemsText || !cartTotalText || !cartDropdownItems || !cartDropdownSummary || !cartModalItems || !cartSummary) {
        console.error('Cart UI elements not found');
        return;
    }

    const itemCount = cart.reduce((sum, item) => sum + item.quantity, 0);
    const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);

    cartCount.textContent = itemCount;
    cartItemsText.textContent = `${itemCount} ${translations[lang]['cart-items'].split(' ')[1]}`;
    cartTotalText.textContent = `$${totalPrice.toFixed(2)}`;
    cartDropdownSummary.textContent = `${translations[lang]['cart-total'].split(':')[0]}: $${totalPrice.toFixed(2)}`;
    cartSummary.textContent = `${translations[lang]['cart-total'].split(':')[0]}: $${totalPrice.toFixed(2)}`;

    cartDropdownItems.innerHTML = '';
    cartModalItems.innerHTML = '';

    cart.forEach(item => {
        const dropdownItem = document.createElement('li');
        dropdownItem.innerHTML = `
            <img src="${item.image}" alt="${item.name[lang]}">
            <div class="cart-dropdown__item-info">
                <p class="cart-dropdown__item-name">${item.name[lang]}</p>
                <p class="cart-dropdown__item-price">$${item.price.toFixed(2)} x ${item.quantity}</p>
            </div>
            <button class="cart-dropdown__item-remove" data-id="${item.id}">✕</button>
        `;
        cartDropdownItems.appendChild(dropdownItem);

        const modalItem = document.createElement('li');
        modalItem.innerHTML = `
            ${item.name[lang]} - $${item.price.toFixed(2)} x ${item.quantity}
            <button class="cart-item-remove" data-id="${item.id}">${translations[lang]['cart-clear'].split(' ')[0]}</button>
        `;
        cartModalItems.appendChild(modalItem);
    });
}

export function addToCart(productId, products) {
    console.log('Adding to cart:', productId);
    const product = products.find(p => p.id === productId);
    if (!product) return;
    const cartItem = cart.find(item => item.id === productId);

    if (cartItem) {
        cartItem.quantity += 1;
    } else {
        cart.push({ ...product, quantity: 1 });
    }

    saveCart();
}

export function removeFromCart(productId) {
    console.log('Removing from cart:', productId);
    cart = cart.filter(item => item.id !== productId);
    saveCart();
}

export function clearCart() {
    console.log('Clearing cart');
    cart = [];
    saveCart();
}

export function toggleCartDropdown(e) {
    console.log('Toggling cart dropdown');
    e.stopPropagation();
    const cartDropdown = document.querySelector('.cart-dropdown');
    if (cartDropdown) cartDropdown.classList.toggle('cart-dropdown--open');
}

export function openCartModal(e) {
    console.log('Opening cart modal');
    e.stopPropagation();
    const cartModal = document.querySelector('.cart-modal');
    if (cartModal) cartModal.showModal();
}

export function closeCartModal() {
    console.log('Closing cart modal');
    const cartModal = document.querySelector('.cart-modal');
    if (cartModal) cartModal.close();
}
=== ./js/auth.js ===
export function updateProfileButton(translations = {}, lang = 'ru') {
    const profileButton = document.getElementById('profileButton');
    if (!profileButton) {
        console.error('Ошибка: Элемент #profileButton не найден!');
        return;
    }
    const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';
    const key = isAuthenticated ? 'profile' : 'login';
    
    // Проверка translations и lang
    if (!translations || !translations[lang]) {
        console.warn(`Translations для языка "${lang}" не найдены, используем fallback`);
        profileButton.textContent = isAuthenticated ? 'Личный кабинет' : 'Войти';
    } else {
        profileButton.textContent = translations[lang][key] || (isAuthenticated ? 'Личный кабинет' : 'Войти');
    }
    profileButton.setAttribute('data-i18n', key);
    console.log(`updateProfileButton: lang=${lang}, isAuthenticated=${isAuthenticated}, text=${profileButton.textContent}`);
}

export function renderLoginModal(translations = {}, lang = 'ru') {
    const modalContent = document.getElementById('modalContent');
    if (!modalContent) {
        console.error('Ошибка: Элемент #modalContent не найден!');
        return;
    }
    modalContent.innerHTML = `
        <h2 data-i18n="login-title">${translations[lang]?.['login-title'] || 'Вход'}</h2>
        <form id="loginForm">
            <div class="modal__field">
                <label for="username" data-i18n="username">${translations[lang]?.['username'] || 'Имя пользователя'}</label>
                <input type="text" id="username" placeholder="Введите имя" required>
            </div>
            <div class="modal__field">
                <label for="password" data-i18n="password">${translations[lang]?.['password'] || 'Пароль'}</label>
                <input type="password" id="password" placeholder="Введите пароль" required>
            </div>
            <button type="submit" class="modal__button" data-i18n="login">${translations[lang]?.['login'] || 'Войти'}</button>
        </form>
    `;
    const loginForm = document.getElementById('loginForm');
    if (loginForm) {
        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            if (username && password) {
                localStorage.setItem('isAuthenticated', 'true');
                localStorage.setItem('username', username);
                closeModal();
                updateProfileButton(translations, lang);
                renderProfileModal(translations, lang);
            } else {
                alert('Введите логин и пароль!');
            }
        });
    }
}

export function renderProfileModal(translations = {}, lang = 'ru') {
    const modalContent = document.getElementById('modalContent');
    if (!modalContent) {
        console.error('Ошибка: Элемент #modalContent не найден!');
        return;
    }
    const username = localStorage.getItem('username') || 'Пользователь';
    modalContent.innerHTML = `
        <h2 data-i18n="profile-title">${translations[lang]?.['profile-title'] || 'Личный кабинет'}</h2>
        <p data-i18n="welcome">${(translations[lang]?.['welcome'] || 'Добро пожаловать')}, ${username}!</p>
        <button class="modal__button modal__button--logout" data-i18n="logout">${translations[lang]?.['logout'] || 'Выйти'}</button>
    `;
    const logoutBtn = document.querySelector('.modal__button--logout');
    if (logoutBtn) {
        logoutBtn.addEventListener('click', () => {
            localStorage.removeItem('isAuthenticated');
            localStorage.removeItem('username');
            closeModal();
            updateProfileButton(translations, lang);
        });
    }
}

export function openModal(translations = {}, lang = 'ru') {
    const profileModal = document.getElementById('profileModal');
    if (!profileModal) {
        console.error('Ошибка: Элемент #profileModal не найден!');
        return;
    }
    profileModal.style.display = 'flex';
    document.body.style.overflow = 'hidden';
    const isAuthenticated = localStorage.getItem('isAuthenticated') === 'true';
    if (isAuthenticated) {
        renderProfileModal(translations, lang);
    } else {
        renderLoginModal(translations, lang);
    }
}

export function closeModal() {
    const profileModal = document.getElementById('profileModal');
    if (!profileModal) {
        console.error('Ошибка: Элемент #profileModal не найден!');
        return;
    }
    profileModal.style.display = 'none';
    document.body.style.overflow = 'auto';
}
=== ./js/theme.js ===
export function toggleTheme() {
    console.log('Toggling theme');
    const body = document.body;
    const themeToggle = document.querySelector('.theme-toggle');
    body.classList.toggle('light-theme');
    themeToggle.classList.toggle('light-theme');
    const isLightTheme = body.classList.contains('light-theme');
    localStorage.setItem('theme', isLightTheme ? 'light' : 'dark');
}

export function initTheme() {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    console.log(`Initializing theme: ${savedTheme}`);
    if (savedTheme === 'light') {
        document.body.classList.add('light-theme');
        document.querySelector('.theme-toggle').classList.add('light-theme');
    }
}

// export function toggleTheme() {
//     console.log('Toggling theme');
//     const body = document.body;
//     const themeToggle = document.querySelector('.theme-toggle');
//     body.classList.toggle('light-theme');
//     if (themeToggle) {
//         themeToggle.classList.toggle('light-theme');
//     }
//     const isLightTheme = body.classList.contains('light-theme');
//     localStorage.setItem('theme', isLightTheme ? 'light' : 'dark');
// }

// export function initTheme() {
//     const savedTheme = localStorage.getItem('theme') || 'dark';
//     console.log(`Initializing theme: ${savedTheme}`);
//     if (savedTheme === 'light') {
//         document.body.classList.add('light-theme');
//         const themeToggle = document.querySelector('.theme-toggle');
//         if (themeToggle) {
//             themeToggle.classList.add('light-theme');
//         }
//     }
// }
=== ./js/main.js ===
import { cart, saveCart, updateCartUI, addToCart, removeFromCart, clearCart, toggleCartDropdown, openCartModal, closeCartModal } from './cart.js';
import { toggleTheme, initTheme } from './theme.js';
import { translations, switchLanguage } from './i18n.js';
import { products, renderProducts, filterProducts } from './products.js';
import { initNavigation } from './navigation.js';
import { updateProfileButton, openModal, closeModal } from './auth.js';

async function loadComponent(containerId, componentPath) {
    try {
        const response = await fetch(componentPath);
        if (!response.ok) throw new Error(`Failed to load ${componentPath}: ${response.status}`);
        const html = await response.text();
        const container = document.getElementById(containerId);
        if (container) {
            container.innerHTML = html;
        } else {
            console.error(`Container ${containerId} not found`);
        }
    } catch (error) {
        console.error(`Error loading component ${componentPath}:`, error);
    }
}

document.addEventListener('DOMContentLoaded', async () => {
    console.log('DOM loaded, initializing components');
    
    // Загрузка компонентов
    await Promise.all([
        loadComponent('header-container', 'components/header.html'),
        loadComponent('hero-container', 'components/hero.html'),
        loadComponent('services-container', 'components/services.html'),
        loadComponent('products-container', 'components/products.html'),
        loadComponent('contacts-container', 'components/contacts.html'),
        loadComponent('footer-container', 'components/footer.html'),
        loadComponent('cart-modal-container', 'components/cart.html')
    ]);

    // Проверка и исправление языка
    let savedLanguage = localStorage.getItem('language') || 'ru';
    if (!['ru', 'uk'].includes(savedLanguage)) {
        console.warn(`Некорректный язык "${savedLanguage}", устанавливаем ru`);
        savedLanguage = 'ru';
        localStorage.setItem('language', savedLanguage);
    }

    // Инициализация
    initTheme();
    switchLanguage(savedLanguage);
    renderProducts(savedLanguage, translations);
    updateCartUI(translations, savedLanguage);
    initNavigation();

    // Инициализация авторизации
    const profileButton = document.getElementById('profileButton');
    const profileModal = document.getElementById('profileModal');
    const modalClose = document.querySelector('.modal__close');
    
    if (profileButton && profileModal && modalClose) {
        updateProfileButton(translations, savedLanguage); // Инициализация кнопки профиля
        profileButton.addEventListener('click', (e) => {
            e.stopPropagation();
            openModal(translations, savedLanguage);
        });
        modalClose.addEventListener('click', closeModal);
        window.addEventListener('click', (e) => {
            if (e.target === profileModal) {
                closeModal();
            }
        });
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && profileModal.style.display === 'flex') {
                closeModal();
            }
        });
        console.log('Profile button initialized successfully');
    } else {
        console.error('Ошибка: Не найдены элементы #profileButton, #profileModal или .modal__close');
    }

    // Обработчики событий
    const categorySelect = document.getElementById('category');
    const priceSelect = document.getElementById('price');
    if (categorySelect) categorySelect.addEventListener('change', () => filterProducts(savedLanguage, translations));
    if (priceSelect) priceSelect.addEventListener('change', () => filterProducts(savedLanguage, translations));

    document.querySelectorAll('.language-switcher').forEach(button => {
        button.addEventListener('click', () => {
            const lang = button.dataset.lang;
            if (!['ru', 'uk'].includes(lang)) {
                console.warn(`Некорректный язык "${lang}", пропускаем`);
                return;
            }
            switchLanguage(lang);
            renderProducts(lang, translations);
            updateCartUI(translations, lang);
            updateProfileButton(translations, lang);
        });
    });

    const themeToggle = document.querySelector('.theme-toggle');
    if (themeToggle) themeToggle.addEventListener('click', toggleTheme);

    const openCartModalButton = document.querySelector('#openCartModal');
    if (openCartModalButton) openCartModalButton.addEventListener('click', openCartModal);

    const cartDropdownToggle = document.querySelector('#cartDropdownToggle');
    if (cartDropdownToggle) cartDropdownToggle.addEventListener('click', toggleCartDropdown);

    const checkoutButton = document.querySelector('.cart-button--checkout');
    if (checkoutButton) checkoutButton.addEventListener('click', openCartModal);

    const closeModalButton = document.querySelector('.cart-modal__close');
    if (closeModalButton) closeModalButton.addEventListener('click', closeCartModal);

    const clearCartButton = document.querySelector('.cart-button--clear');
    if (clearCartButton) clearCartButton.addEventListener('click', () => {
        clearCart();
        updateCartUI(translations, savedLanguage);
    });

    const productsGrid = document.querySelector('.products__grid');
    if (productsGrid) {
        productsGrid.addEventListener('click', (e) => {
            if (e.target.classList.contains('product-card__button')) {
                const productId = parseInt(e.target.dataset.id);
                addToCart(productId, products);
                updateCartUI(translations, savedLanguage);
            }
        });
    }

    const servicesGrid = document.querySelector('.services__grid');
    if (servicesGrid) {
        servicesGrid.addEventListener('click', (e) => {
            if (e.target.classList.contains('service-card__button')) {
                const button = e.target;
                const productId = button.dataset.id;
                const lang = localStorage.getItem('language') || 'ru';
                const product = {
                    id: productId,
                    name: { ru: button.dataset.nameRu, uk: button.dataset.nameUk },
                    price: parseFloat(button.dataset.price),
                    image: 'https://picsum.photos/150'
                };
                const cartItem = cart.find(item => item.id === productId);
                if (cartItem) {
                    cartItem.quantity += 1;
                } else {
                    cart.push({ ...product, quantity: 1 });
                }
                saveCart();
                updateCartUI(translations, lang);
            }
        });
    }

    const cartDropdownItems = document.querySelector('.cart-dropdown__items');
    if (cartDropdownItems) {
        cartDropdownItems.addEventListener('click', (e) => {
            if (e.target.classList.contains('cart-dropdown__item-remove')) {
                const productId = e.target.dataset.id;
                removeFromCart(productId);
                updateCartUI(translations, savedLanguage);
            }
        });
    }

    const cartItems = document.querySelector('.cart-items');
    if (cartItems) {
        cartItems.addEventListener('click', (e) => {
            if (e.target.classList.contains('cart-item-remove')) {
                const productId = e.target.dataset.id;
                removeFromCart(productId);
                updateCartUI(translations, savedLanguage);
            }
        });
    }

    // Обработка ошибок изображений
    document.addEventListener('error', (e) => {
        if (e.target.tagName === 'IMG') {
            e.target.src = 'https://placehold.co/150x150/red/white?text=Image+Error';
        }
    }, true);
});
=== ./js/navigation.js ===
export function initNavigation() {
    document.querySelector('.header__toggle').addEventListener('click', () => {
        document.querySelector('.header__nav').classList.toggle('header__nav--open');
        document.querySelector('.header__toggle').classList.toggle('header__toggle--open');
    });
}
=== ./js/i18n.js ===
export const translations = {
    ru: {
        "site-title": "Климат Контроль",
        "header-title": "Климат Контроль",
        "nav-home": "Главная",
        "nav-services": "Услуги",
        "nav-products": "Товары",
        "nav-contacts": "Контакты",
        "hero-title": "Комфортный климат в вашем доме",
        "hero-subtitle": "Профессиональный монтаж и продажа кондиционеров и рекуператоров.",
        "hero-cta": "Посмотреть товары",
        "services-title": "Наши услуги",
        "service-ac-install-title": "Монтаж кондиционеров",
        "service-ac-install-desc": "Профессиональная установка любой сложности.",
        "service-recuperator-install-title": "Монтаж рекуператоров",
        "service-recuperator-install-desc": "Вентиляционные системы для свежего воздуха.",
        "service-maintenance-title": "Обслуживание систем",
        "service-maintenance-desc": "Чистка и ремонт климатического оборудования.",
        "service-order": "Заказать",
        "products-title": "Наши товары",
        "filter-category": "Категория:",
        "filter-price": "Цена:",
        "filter-all": "Все",
        "filter-ac": "Кондиционеры",
        "filter-recuperator": "Рекуператоры",
        "filter-low-to-high": "От низкой к высокой",
        "filter-high-to-low": "От высокой к низкой",
        "contacts-title": "Свяжитесь с нами",
        "contacts-email": "Email: info@climat-control.com",
        "contacts-phone": "Телефон: +380-800-555-1234",
        "contacts-address": "Адрес: ул. Климатическая, 123, Киев",
        "form-name": "Ваше имя",
        "form-email": "Ваш email",
        "form-message": "Ваше сообщение",
        "form-submit": "Отправить сообщение",
        "footer-title": "Климат Контроль",
        "footer-copyright": "© 2025 Климат Контроль. Все права защищены.",
        "cart-items": "0 товаров",
        "cart-total": "Итого: $0.00",
        "cart-clear": "Очистить корзину",
        "cart-checkout": "Оформить заказ",
        "cart-modal-title": "Ваша корзина",
        "login": "Войти",
        "login-title": "Вход",
        "username": "Имя пользователя",
        "password": "Пароль",
        "profile": "Личный кабинет",
        "profile-title": "Личный кабинет",
        "welcome": "Добро пожаловать",
        "logout": "Выйти"
    },
    uk: {
        "site-title": "Клімат Контроль",
        "header-title": "Клімат Контроль",
        "nav-home": "Головна",
        "nav-services": "Послуги",
        "nav-products": "Товари",
        "nav-contacts": "Контакти",
        "hero-title": "Комфортний клімат у вашому домі",
        "hero-subtitle": "Професійний монтаж та продаж кондиціонерів і рекуператорів.",
        "hero-cta": "Переглянути товари",
        "services-title": "Наші послуги",
        "service-ac-install-title": "Монтаж кондиціонерів",
        "service-ac-install-desc": "Професійна установка будь-якої складності.",
        "service-recuperator-install-title": "Монтаж рекуператорів",
        "service-recuperator-install-desc": "Вентиляційні системи для свіжого повітря.",
        "service-maintenance-title": "Обслуговування систем",
        "service-maintenance-desc": "Чищення та ремонт кліматичного обладнання.",
        "service-order": "Замовити",
        "products-title": "Наші товари",
        "filter-category": "Категорія:",
        "filter-price": "Ціна:",
        "filter-all": "Усі",
        "filter-ac": "Кондиціонери",
        "filter-recuperator": "Рекуператори",
        "filter-low-to-high": "Від низької до високої",
        "filter-high-to-low": "Від високої до низької",
        "contacts-title": "Зв’яжіться з нами",
        "contacts-email": "Email: info@climat-control.com",
        "contacts-phone": "Телефон: +380-800-555-1234",
        "contacts-address": "Адреса: вул. Кліматична, 123, Київ",
        "form-name": "Ваше ім’я",
        "form-email": "Ваш email",
        "form-message": "Ваше повідомлення",
        "form-submit": "Надіслати повідомлення",
        "footer-title": "Клімат Контроль",
        "footer-copyright": "© 2025 Клімат Контроль. Усі права захищені.",
        "cart-items": "0 товарів",
        "cart-total": "Разом: $0.00",
        "cart-clear": "Очистити кошик",
        "cart-checkout": "Оформити замовлення",
        "cart-modal-title": "Ваш кошик",
        "login": "Увійти",
        "login-title": "Вхід",
        "username": "Ім'я користувача",
        "password": "Пароль",
        "profile": "Особистий кабінет",
        "profile-title": "Особистий кабінет",
        "welcome": "Вітаємо",
        "logout": "Вийти"
    }
};

export function switchLanguage(lang) {
    console.log(`Switching language to: ${lang}`);
    document.querySelectorAll('[data-i18n]').forEach(element => {
        const key = element.getAttribute('data-i18n');
        if (translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });

    document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
        const key = element.getAttribute('data-i18n-placeholder');
        if (translations[lang][key]) {
            element.placeholder = translations[lang][key];
        }
    });

    localStorage.setItem('language', lang);
}
=== ./components/hero.html ===
<section id="home" class="hero">
    <div class="hero__container container">
        <h2 class="hero__title" data-i18n="hero-title">Комфортный климат в вашем доме</h2>
        <p class="hero__subtitle" data-i18n="hero-subtitle">Профессиональный монтаж и продажа кондиционеров и рекуператоров.</p>
        <a href="#products" class="hero__cta" data-i18n="hero-cta">Посмотреть товары</a>
    </div>
</section>
=== ./components/contacts.html ===
<section id="contacts" class="contacts">
    <div class="container">
        <h2 class="contacts__title" data-i18n="contacts-title">Свяжитесь с нами</h2>
        <div class="contacts__content">
            <div class="contacts__info">
                <p data-i18n="contacts-email">Email: info@climat-control.com</p>
                <p data-i18n="contacts-phone">Телефон: +380-800-555-1234</p>
                <p data-i18n="contacts-address">Адрес: ул. Климатическая, 123, Киев</p>
            </div>
            <form class="contacts__form">
                <input type="text" placeholder="Ваше имя" data-i18n-placeholder="form-name" required>
                <input type="email" placeholder="Ваш email" data-i18n-placeholder="form-email" required>
                <textarea placeholder="Ваше сообщение" data-i18n-placeholder="form-message" required></textarea>
                <button type="submit" data-i18n="form-submit">Отправить сообщение</button>
            </form>
        </div>
    </div>
</section>
=== ./components/products.html ===
<section id="products" class="products">
    <div class="container">
        <h2 class="products__title" data-i18n="products-title">Наши товары</h2>
        <div class="products__filters">
            <div class="filter-group">
                <label for="category" data-i18n="filter-category">Категория:</label>
                <select id="category">
                    <option value="all" data-i18n="filter-all">Все</option>
                    <option value="ac" data-i18n="filter-ac">Кондиционеры</option>
                    <option value="recuperator" data-i18n="filter-recuperator">Рекуператоры</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="price" data-i18n="filter-price">Цена:</label>
                <select id="price">
                    <option value="all" data-i18n="filter-all">Все</option>
                    <option value="low" data-i18n="filter-low-to-high">От низкой к высокой</option>
                    <option value="high" data-i18n="filter-high-to-low">От высокой к низкой</option>
                </select>
            </div>
        </div>
        <div class="products__grid"></div>
    </div>
</section>
=== ./components/footer.html ===
<footer class="footer">
    <div class="footer__container container">
        <div class="footer__info">
            <h3 data-i18n="footer-title">Климат Контроль</h3>
            <p data-i18n="contacts-email">Email: info@climat-control.com</p>
            <p data-i18n="contacts-phone">Телефон: +380-800-555-1234</p>
            <p data-i18n="contacts-address">Адрес: ул. Климатическая, 123, Киев</p>
        </div>
        <div class="footer__copyright">
            <p data-i18n="footer-copyright">&copy; 2025 Климат Контроль. Все права защищены.</p>
        </div>
    </div>
</footer>
=== ./components/services.html ===
<section id="services" class="services">
    <div class="container">
        <h2 class="services__title" data-i18n="services-title">Наши услуги</h2>
        <div class="services__grid">
            <div class="service-card">
                <h3 class="service-card__title" data-i18n="service-ac-install-title">Монтаж кондиционеров</h3>
                <p class="service-card__description" data-i18n="service-ac-install-desc">Профессиональная установка любой сложности.</p>
                <button class="service-card__button" data-id="s1" data-name-ru="Монтаж кондиционера" data-name-uk="Монтаж кондиціонерів" data-price="5000" data-i18n="service-order">Заказать</button>
            </div>
            <div class="service-card">
                <h3 class="service-card__title" data-i18n="service-recuperator-install-title">Монтаж рекуператоров</h3>
                <p class="service-card__description" data-i18n="service-recuperator-install-desc">Вентиляционные системы для свежего воздуха.</p>
                <button class="service-card__button" data-id="s2" data-name-ru="Монтаж рекуператора" data-name-uk="Монтаж рекуператорів" data-price="6000" data-i18n="service-order">Заказать</button>
            </div>
            <div class="service-card">
                <h3 class="service-card__title" data-i18n="service-maintenance-title">Обслуживание систем</h3>
                <p class="service-card__description" data-i18n="service-maintenance-desc">Чистка и ремонт климатического оборудования.</p>
                <button class="service-card__button" data-id="s3" data-name-ru="Обслуживание систем" data-name-uk="Обслуговування систем" data-price="2000" data-i18n="service-order">Заказать</button>
            </div>
        </div>
    </div>
</section>
=== ./components/cart.html ===
<dialog class="cart-modal">
    <div class="cart-modal__header">
        <h2 data-i18n="cart-modal-title">Ваша корзина</h2>
        <button class="cart-modal__close">✕</button>
    </div>
    <ul class="cart-items"></ul>
    <div class="cart-summary" data-i18n="cart-total">Итого: $0.00</div>
    <div class="cart-modal__footer">
        <button class="cart-button--clear" data-i18n="cart-clear">Очистить корзину</button>
        <button class="cart-button--checkout" data-i18n="cart-checkout">Оформить заказ</button>
    </div>
</dialog>
=== ./components/product-card.html ===
<div class="product-card">
    <img src="{image}" alt="{name}" class="product-card__image">
    <h3 class="product-card__title">{name}</h3>
    <p class="product-card__description">{description}</p>
    <p class="product-card__price">${price}</p>
    <button class="product-card__button" data-id="{id}" data-i18n="service-order">Заказать</button>
</div>
=== ./components/header.html ===
<header class="header">
    <div class="header__container container">
        <h1 class="header__title" data-i18n="header-title">Климат Контроль</h1>
        <nav class="header__nav">
            <ul class="header__nav-list">
                <li class="header__nav-item"><a href="#home" class="header__nav-link" data-i18n="nav-home">Главная</a></li>
                <li class="header__nav-item"><a href="#services" class="header__nav-link" data-i18n="nav-services">Услуги</a></li>
                <li class="header__nav-item"><a href="#products" class="header__nav-link" data-i18n="nav-products">Товары</a></li>
                <li class="header__nav-item"><a href="#contacts" class="header__nav-link" data-i18n="nav-contacts">Контакты</a></li>
            </ul>
        </nav>
        <div class="header__controls">
            <button class="language-switcher" data-lang="ru">RU</button>
            <button class="language-switcher" data-lang="uk">UK</button>
            <button class="theme-toggle" aria-label="Сменить тему"></button>
            <button class="profile-button" id="profileButton" data-i18n="login">Войти</button>
            <div class="cart-button-container">
                <button class="cart-button" id="openCartModal">
                    <span class="cart-icon-wrapper">
                        <span class="cart-icon">🛒</span>
                        <span class="cart-count">0</span>
                    </span>
                    <span class="cart-text">
                        <span class="cart-text__items" data-i18n="cart-items">0 товаров</span>
                        <span class="cart-text__total">$0.00</span>
                    </span>
                    <span class="cart-dropdown-toggle" id="cartDropdownToggle">▼</span>
                </button>
                <div class="cart-dropdown">
                    <ul class="cart-dropdown__items"></ul>
                    <div class="cart-dropdown__summary" data-i18n="cart-total">Итого: $0.00</div>
                    <div class="cart-dropdown__actions">
                        <button class="cart-dropdown__button cart-button--clear" data-i18n="cart-clear">Очистить корзину</button>
                        <button class="cart-dropdown__button cart-button--checkout" data-i18n="cart-checkout">Оформить заказ</button>
                    </div>
                </div>
            </div>
            <button class="header__toggle">
                <span class="header__toggle-icon"></span>
            </button>
        </div>
    </div>
</header>

<!-- Модальное окно для профиля (добавлено здесь, чтобы загружалось с шапкой) -->
<div class="modal" id="profileModal">
    <div class="modal__content">
        <span class="modal__close">&times;</span>
        <div id="modalContent"></div>
    </div>
</div>
=== ./components/service-card.html ===
<div class="service-card">
    <h3 class="service-card__title" data-i18n="{title-key}">{title}</h3>
    <p class="service-card__description" data-i18n="{desc-key}">{description}</p>
    <button class="service-card__button" data-id="{id}" data-name-ru="{name-ru}" data-name-uk="{name-uk}" data-price="{price}" data-i18n="service-order">Заказать</button>
</div>
=== ./package-lock.json ===
{
  "name": "Progect-shop",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "dependencies": {
        "@supabase/supabase-js": "^2.57.4"
      }
    },
    "node_modules/@supabase/auth-js": {
      "version": "2.71.1",
      "resolved": "https://registry.npmjs.org/@supabase/auth-js/-/auth-js-2.71.1.tgz",
      "integrity": "sha512-mMIQHBRc+SKpZFRB2qtupuzulaUhFYupNyxqDj5Jp/LyPvcWvjaJzZzObv6URtL/O6lPxkanASnotGtNpS3H2Q==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/functions-js": {
      "version": "2.4.6",
      "resolved": "https://registry.npmjs.org/@supabase/functions-js/-/functions-js-2.4.6.tgz",
      "integrity": "sha512-bhjZ7rmxAibjgmzTmQBxJU6ZIBCCJTc3Uwgvdi4FewueUTAGO5hxZT1Sj6tiD+0dSXf9XI87BDdJrg12z8Uaew==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/node-fetch": {
      "version": "2.6.15",
      "resolved": "https://registry.npmjs.org/@supabase/node-fetch/-/node-fetch-2.6.15.tgz",
      "integrity": "sha512-1ibVeYUacxWYi9i0cf5efil6adJ9WRyZBLivgjs+AUpewx1F3xPi7gLgaASI2SmIQxPoCEjAsLAzKPgMJVgOUQ==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      }
    },
    "node_modules/@supabase/postgrest-js": {
      "version": "1.21.4",
      "resolved": "https://registry.npmjs.org/@supabase/postgrest-js/-/postgrest-js-1.21.4.tgz",
      "integrity": "sha512-TxZCIjxk6/dP9abAi89VQbWWMBbybpGWyvmIzTd79OeravM13OjR/YEYeyUOPcM1C3QyvXkvPZhUfItvmhY1IQ==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/realtime-js": {
      "version": "2.15.5",
      "resolved": "https://registry.npmjs.org/@supabase/realtime-js/-/realtime-js-2.15.5.tgz",
      "integrity": "sha512-/Rs5Vqu9jejRD8ZeuaWXebdkH+J7V6VySbCZ/zQM93Ta5y3mAmocjioa/nzlB6qvFmyylUgKVS1KpE212t30OA==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.13",
        "@types/phoenix": "^1.6.6",
        "@types/ws": "^8.18.1",
        "ws": "^8.18.2"
      }
    },
    "node_modules/@supabase/storage-js": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/@supabase/storage-js/-/storage-js-2.12.1.tgz",
      "integrity": "sha512-QWg3HV6Db2J81VQx0PqLq0JDBn4Q8B1FYn1kYcbla8+d5WDmTdwwMr+EJAxNOSs9W4mhKMv+EYCpCrTFlTj4VQ==",
      "license": "MIT",
      "dependencies": {
        "@supabase/node-fetch": "^2.6.14"
      }
    },
    "node_modules/@supabase/supabase-js": {
      "version": "2.57.4",
      "resolved": "https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.57.4.tgz",
      "integrity": "sha512-LcbTzFhHYdwfQ7TRPfol0z04rLEyHabpGYANME6wkQ/kLtKNmI+Vy+WEM8HxeOZAtByUFxoUTTLwhXmrh+CcVw==",
      "license": "MIT",
      "dependencies": {
        "@supabase/auth-js": "2.71.1",
        "@supabase/functions-js": "2.4.6",
        "@supabase/node-fetch": "2.6.15",
        "@supabase/postgrest-js": "1.21.4",
        "@supabase/realtime-js": "2.15.5",
        "@supabase/storage-js": "2.12.1"
      }
    },
    "node_modules/@types/node": {
      "version": "24.3.3",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.3.3.tgz",
      "integrity": "sha512-GKBNHjoNw3Kra1Qg5UXttsY5kiWMEfoHq2TmXb+b1rcm6N7B3wTrFYIf/oSZ1xNQ+hVVijgLkiDZh7jRRsh+Gw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~7.10.0"
      }
    },
    "node_modules/@types/phoenix": {
      "version": "1.6.6",
      "resolved": "https://registry.npmjs.org/@types/phoenix/-/phoenix-1.6.6.tgz",
      "integrity": "sha512-PIzZZlEppgrpoT2QgbnDU+MMzuR6BbCjllj0bM70lWoejMeNJAxCchxnv7J3XFkI8MpygtRpzXrIlmWUBclP5A==",
      "license": "MIT"
    },
    "node_modules/@types/ws": {
      "version": "8.18.1",
      "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.18.1.tgz",
      "integrity": "sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/undici-types": {
      "version": "7.10.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.10.0.tgz",
      "integrity": "sha512-t5Fy/nfn+14LuOc2KNYg75vZqClpAiqscVvMygNnlsHBFpSXdJaYtXMcdNLpl/Qvc3P2cB3s6lOV51nqsFq4ag==",
      "license": "MIT"
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/ws": {
      "version": "8.18.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    }
  }
}

=== ./package.json ===
{
  "dependencies": {
    "@supabase/supabase-js": "^2.57.4"
  }
}

=== ./manifest.json ===
{
    "name": "Климат Контроль",
    "short_name": "Climat",
    "description": "Монтаж и продажа кондиционеров и рекуператоров",
    "start_url": "/",
    "display": "standalone",
    "background_color": "#0a0a23",
    "theme_color": "#00ddeb",
    "orientation": "portrait-primary",
    "icons": [
        {
            "src": "/icons/icon-192x192.png",
            "sizes": "192x192",
            "type": "image/png"
        },
        {
            "src": "/icons/icon-512x512.png",
            "sizes": "512x512",
            "type": "image/png"
        }
    ]
}
